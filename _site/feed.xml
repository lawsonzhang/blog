<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lawsonzhang's Homepage</title>
    <description>Lawson's blog,first step, second step...</description>
    <link>http://blog.lehehe.me//</link>
    <atom:link href="http://blog.lehehe.me//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 27 Sep 2016 13:55:51 +0800</pubDate>
    <lastBuildDate>Tue, 27 Sep 2016 13:55:51 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>技能树</title>
        <description>&lt;h2 id=&quot;php&quot;&gt;PHP&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;框架&lt;/li&gt;
  &lt;li&gt;调试&lt;/li&gt;
  &lt;li&gt;web安全&lt;/li&gt;
  &lt;li&gt;设计模式&lt;/li&gt;
  &lt;li&gt;php-cgi php-fpm&lt;/li&gt;
  &lt;li&gt;扩展&lt;/li&gt;
  &lt;li&gt;性能优化&lt;/li&gt;
  &lt;li&gt;内部实现(life cycle)&lt;/li&gt;
  &lt;li&gt;单元测试&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mysql&quot;&gt;mysql&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;普通语句&lt;/li&gt;
  &lt;li&gt;复杂语句&lt;/li&gt;
  &lt;li&gt;内置函数和运算&lt;/li&gt;
  &lt;li&gt;存储过程和视图&lt;/li&gt;
  &lt;li&gt;优化
    &lt;ol&gt;
      &lt;li&gt;表结构优化&lt;/li&gt;
      &lt;li&gt;存储引擎&lt;/li&gt;
      &lt;li&gt;sql优化&lt;/li&gt;
      &lt;li&gt;索引优化&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;复制(replication)&lt;/li&gt;
  &lt;li&gt;mysql管理、权限、日志&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nosql&quot;&gt;nosql&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;redis&lt;/li&gt;
  &lt;li&gt;memcached&lt;/li&gt;
  &lt;li&gt;mongodb&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;网络与架构&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;负载均衡&lt;/li&gt;
  &lt;li&gt;反向代理&lt;/li&gt;
  &lt;li&gt;消息系统&lt;/li&gt;
  &lt;li&gt;分布式存储&lt;/li&gt;
  &lt;li&gt;分布式计算&lt;/li&gt;
  &lt;li&gt;cdn&lt;/li&gt;
  &lt;li&gt;plp&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;linux&quot;&gt;linux&lt;/h2&gt;
</description>
        <pubDate>Tue, 27 Sep 2016 00:00:00 +0800</pubDate>
        <link>http://blog.lehehe.me//php/2016/09/27/php-skilltree.html</link>
        <guid isPermaLink="true">http://blog.lehehe.me//php/2016/09/27/php-skilltree.html</guid>
        
        <category>php</category>
        
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>php &amp;=</title>
        <description>&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;&lt;span style=&quot;color: #000000;&quot;&gt;
引用是什么
在 PHP 中引用意味着用不同的名字访问同一个变量内容。这并不像 C 的指针，它们是符号表别名。注意在 PHP 中，变量名和变量内容是不一样的，因此同样的内容可以有不同的名字。最接近的比喻是 Unix 的文件名和文件本身 － 变量名是目录条目，而变量内容则是文件本身。引用可以被看作是 Unix 文件系统中的紧密连接。 

引用做什么
PHP 的引用允许你用两个变量来指向同一个内容。意思是，当你这样做时： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; =&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$b&lt;/span&gt;
?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

这意味着 &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; 和 &lt;span style=&quot;color: #800080;&quot;&gt;$b&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 指向了同一个变量。 
注&lt;/span&gt;: &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; 和 &lt;span style=&quot;color: #800080;&quot;&gt;$b&lt;/span&gt; 在这里是完全相同的，这并不是 &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; 指向了 &lt;span style=&quot;color: #800080;&quot;&gt;$b&lt;/span&gt; 或者相反，而是 &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; 和 &lt;span style=&quot;color: #800080;&quot;&gt;$b&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 指向了同一个地方。 

同样的语法可以用在函数中，它返回引用，以及用在 &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; 运算符中（PHP 4.0.4&lt;span style=&quot;color: #000000;&quot;&gt; 以及以后版本）： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$bar&lt;/span&gt; =&amp;amp; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; fooclass();
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$foo&lt;/span&gt; =&amp;amp; find_var (&lt;span style=&quot;color: #800080;&quot;&gt;$bar&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

注&lt;/span&gt;: 不用 &amp;amp; 运算符导致对象生成了一个拷贝。如果你在类中用 &lt;span style=&quot;color: #800080;&quot;&gt;$this&lt;/span&gt;，它将作用于该类当前的实例。没有用 &amp;amp; 的赋值将拷贝这个实例（例如对象）并且 &lt;span style=&quot;color: #800080;&quot;&gt;$this&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 将作用于这个拷贝上，这并不总是想要的结果。由于性能和内存消耗的问题，通常你只想工作在一个实例上面。 

尽管你可以用 @ 运算符来关闭构造函数中的任何错误信息，例如用 @&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;，但用 &amp;amp;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 语句时这不起效果。这是 Zend 引擎的一个限制并且会导致一个解析错误。 

引用做的第二件事是用引用传递变量。这是通过在函数内建立一个本地变量并且该变量在呼叫范围内引用了同一个内容来实现的。例如： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;function&lt;/span&gt; foo (&amp;amp;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)
{
    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;++&lt;span style=&quot;color: #000000;&quot;&gt;;
}

&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;=5&lt;span style=&quot;color: #000000;&quot;&gt;;
foo (&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

将使 &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; 变成 6。这是因为在 foo 函数中变量 &lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt; 指向了和 &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 指向的同一个内容。更多详细解释见引用传递。 

引用做的第三件事是引用返回。 

引用不是什么
如前所述，引用不是指针。这意味着下面的结构不会产生你预期的效果： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;function&lt;/span&gt; foo (&amp;amp;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)
{
    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt; =&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$GLOBALS&lt;/span&gt;[&quot;baz&quot;&lt;span style=&quot;color: #000000;&quot;&gt;];
}
foo(&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$bar&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

这将使 foo 函数中的 &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt; 变量在函数调用时和 &lt;span style=&quot;color: #800080;&quot;&gt;$bar&lt;/span&gt; 绑定在一起，但接着又被重新绑定到了 &lt;span style=&quot;color: #800080;&quot;&gt;$GLOBALS&lt;/span&gt;[&quot;baz&quot;] 上面。不可能通过引用机制将 &lt;span style=&quot;color: #800080;&quot;&gt;$bar&lt;/span&gt; 在函数调用范围内绑定到别的变量上面，因为在函数 foo 中并没有变量 &lt;span style=&quot;color: #800080;&quot;&gt;$bar&lt;/span&gt;（它被表示为 &lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;，但是 &lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 只有变量内容而没有调用符号表中的名字到值的绑定）。 

引用传递
你可以将一个变量通过引用传递给函数，这样该函数就可以修改其参数的值。语法如下： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;function&lt;/span&gt; foo (&amp;amp;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)
{
    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;++&lt;span style=&quot;color: #000000;&quot;&gt;;
}

&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;=5&lt;span style=&quot;color: #000000;&quot;&gt;;
foo (&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; $a is 6 here&lt;/span&gt;
?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

注意在函数调用时没有引用符号 － 只有函数定义中有。光是函数定义就足够使参数通过引用来正确传递了。 

以下内容可以通过引用传递： 

变量，例如 foo(&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;) 

&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;New&lt;/span&gt; 语句，例如 foo(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; foobar()) 

从函数中返回的引用，例如： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;function&lt;/span&gt; &amp;amp;&lt;span style=&quot;color: #000000;&quot;&gt;bar()
{
    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; = 5&lt;span style=&quot;color: #000000;&quot;&gt;;
    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
}
foo(bar());
&lt;/span&gt;?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

详细解释见引用返回。 

任何其它表达式都不能通过引用传递，结果未定义。例如下面引用传递的例子是无效的： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;function&lt;/span&gt; bar() &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Note the missing &amp;amp;&lt;/span&gt;
&lt;span style=&quot;color: #000000;&quot;&gt;{
    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; = 5&lt;span style=&quot;color: #000000;&quot;&gt;;
    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
}
foo(bar());

foo(&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; = 5) &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 表达式，不是变量&lt;/span&gt;
foo(5) &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 常量，不是变量&lt;/span&gt;
?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

这些条件是 PHP &lt;/span&gt;4.0.4&lt;span style=&quot;color: #000000;&quot;&gt; 以及以后版本有的。 

引用返回
引用返回用在当你想用函数找到引用应该被绑定在哪一个变量上面时。当返回引用时，使用此语法： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;function&lt;/span&gt; &amp;amp;find_var (&lt;span style=&quot;color: #800080;&quot;&gt;$param&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)
{
    &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; ...code... &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;*/&lt;/span&gt;
    &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$found_var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
}

&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$foo&lt;/span&gt; =&amp;amp; find_var (&lt;span style=&quot;color: #800080;&quot;&gt;$bar&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$foo&lt;/span&gt;-&amp;gt;x = 2&lt;span style=&quot;color: #000000;&quot;&gt;;
&lt;/span&gt;?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

本例中 find_var 函数所返回的对象的属性将被设定（译者：指的是 &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$foo&lt;/span&gt;-&amp;gt;x = 2&lt;span style=&quot;color: #000000;&quot;&gt;; 语句），而不是拷贝，就和没有用引用语法一样。 

注&lt;/span&gt;: 和参数传递不同，这里必须在两个地方都用 &amp;amp; 符号 － 来指出返回的是一个引用，而不是通常的一个拷贝，同样也指出 &lt;span style=&quot;color: #800080;&quot;&gt;$foo&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 是作为引用的绑定，而不是通常的赋值。 

取消引用
当你 &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;unset&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 一个引用，只是断开了变量名和变量内容之间的绑定。这并不意味着变量内容被销毁了。例如： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt; = 1&lt;span style=&quot;color: #000000;&quot;&gt;;
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$b&lt;/span&gt; =&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;unset&lt;/span&gt; (&lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

不会 &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;unset&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$b&lt;/span&gt;，只是 &lt;span style=&quot;color: #800080;&quot;&gt;$a&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;。 

再拿这个和 Unix 的 &lt;/span&gt;&lt;span style=&quot;color: #008080;&quot;&gt;unlink&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 调用来类比一下可能有助于理解。 

引用定位
许多 PHP 的语法结构是通过引用机制实现的，所以上述有关引用绑定的一切也都适用于这些结构。一些结构，例如引用传递和返回，已经在上面提到了。其它使用引用的结构有： 

&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;global&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 引用
当用 &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;global&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 声明一个变量时实际上建立了一个到全局变量的引用。也就是说和这样做是相同的： 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt; =&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$GLOBALS&lt;/span&gt;[&quot;var&quot;&lt;span style=&quot;color: #000000;&quot;&gt;];
&lt;/span&gt;?&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;  

这意味着，例如，&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;unset&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$var&lt;/span&gt; 不会 &lt;span style=&quot;color: #0000ff;&quot;&gt;unset&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 全局变量。 

&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$this&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;
在一个对象的方法中，&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$this&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; 永远是调用它的对象的引用。 

&lt;/span&gt;&amp;lt;?&lt;span style=&quot;color: #000000;&quot;&gt;php
&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;*
 * (C) CopyRight 2008 MagicToolBox - www.magictoolbox.com - support@magictoolbox.com
*&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #0000ff;&quot;&gt;require_once&lt;/span&gt;(DIR_FS_CATALOG . DIR_WS_MODULES . 'magictoolbox/magictoolbox_addons.php'&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt; = magictoolboxLoadModule('MagicZoomPlus'&lt;span style=&quot;color: #000000;&quot;&gt;);
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$enabled&lt;/span&gt; = &lt;span style=&quot;color: #0000ff;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$main_page&lt;/span&gt; = &lt;span style=&quot;color: #0000ff;&quot;&gt;isset&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$_REQUEST&lt;/span&gt;['main_page']) ? &lt;span style=&quot;color: #800080;&quot;&gt;$_REQUEST&lt;/span&gt;['main_page'] : &lt;span style=&quot;color: #800080;&quot;&gt;$_GET&lt;/span&gt;['main_page'&lt;span style=&quot;color: #000000;&quot;&gt;];
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$cPath&lt;/span&gt; = &lt;span style=&quot;color: #0000ff;&quot;&gt;isset&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$_REQUEST&lt;/span&gt;['cPath']) ? &lt;span style=&quot;color: #800080;&quot;&gt;$_REQUEST&lt;/span&gt;['cPath'] : &lt;span style=&quot;color: #800080;&quot;&gt;$_GET&lt;/span&gt;['cPath'&lt;span style=&quot;color: #000000;&quot;&gt;];
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$products_id&lt;/span&gt; = &lt;span style=&quot;color: #0000ff;&quot;&gt;isset&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$_REQUEST&lt;/span&gt;['products_id']) ? &lt;span style=&quot;color: #800080;&quot;&gt;$_REQUEST&lt;/span&gt;['products_id'] : &lt;span style=&quot;color: #800080;&quot;&gt;$_GET&lt;/span&gt;['products_id'&lt;span style=&quot;color: #000000;&quot;&gt;];

&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$scroll&lt;/span&gt; = &lt;span style=&quot;color: #0000ff;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;type == 'standard' &amp;amp;&amp;amp; !&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('template', 'original') &amp;amp;&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('magicscroll', 'yes'&lt;span style=&quot;color: #000000;&quot;&gt;)) {
    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$scroll&lt;/span&gt; = magictoolboxLoadModule('magicscroll'&lt;span style=&quot;color: #000000;&quot;&gt;);
　　&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$scroll&lt;/span&gt;-&amp;gt;params-&amp;gt;appendArray(&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;getArray());
&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$scroll&lt;/span&gt;-&amp;gt;params-&amp;gt;set('direction', &lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('template', &lt;span style=&quot;color: #0000ff;&quot;&gt;array&lt;/span&gt;('left', 'right')) ? 'bottom' : 'right'&lt;span style=&quot;color: #000000;&quot;&gt;);
}

&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;(ZEN_MAGICZOOMPLUS_STATUS == 'true'&lt;span style=&quot;color: #000000;&quot;&gt;) {

    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt; =  !&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-whats-new-block', 'No') ||
                        !&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-specials-block', 'No') ||
                        !&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-featured-block', 'No'&lt;span style=&quot;color: #000000;&quot;&gt;);

    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;type == 'standard'&lt;span style=&quot;color: #000000;&quot;&gt;) {
        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;( (&lt;span style=&quot;color: #008080;&quot;&gt;intval&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$cPath&lt;/span&gt;) &amp;gt; 0 &amp;amp;&amp;amp; (!&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-category-page', 'No') || &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;)) || &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; category page&lt;/span&gt;
            (&lt;span style=&quot;color: #008080;&quot;&gt;intval&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$products_id&lt;/span&gt;) &amp;gt; 0 &amp;amp;&amp;amp; (!&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-product-page', 'No') || &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;)) || &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; product page&lt;/span&gt;
            (&lt;span style=&quot;color: #800080;&quot;&gt;$main_page&lt;/span&gt; == 'products_new' &amp;amp;&amp;amp; (!&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-products-new-page', 'No') || &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;)) ||&lt;span style=&quot;color: #000000;&quot;&gt;
            (&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$main_page&lt;/span&gt; == 'products_all' &amp;amp;&amp;amp; (!&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-products-all-page', 'No') || &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;)) ||&lt;span style=&quot;color: #000000;&quot;&gt;
            (&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$main_page&lt;/span&gt; == 'advanced_search_result' &amp;amp;&amp;amp; (!&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-products-search-page', 'No') || &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;))
        ) {
            &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$enabled&lt;/span&gt; = &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
        }
    } &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;elseif&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;type == 'category' || &lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;type == 'circle'&lt;span style=&quot;color: #000000;&quot;&gt;) {
        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;( (&lt;span style=&quot;color: #008080;&quot;&gt;intval&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$products_id&lt;/span&gt;) &amp;gt; 0 &amp;amp;&amp;amp; (!&lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;params-&amp;gt;checkValue('use-effect-on-product-page', 'No') || &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;)) || &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; product page&lt;/span&gt;
            (&lt;span style=&quot;color: #008080;&quot;&gt;intval&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$cPath&lt;/span&gt;) &amp;gt; 0 &amp;amp;&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;) || &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; category page&lt;/span&gt;
            (&lt;span style=&quot;color: #800080;&quot;&gt;$main_page&lt;/span&gt; == 'products_new' &amp;amp;&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;) ||&lt;span style=&quot;color: #000000;&quot;&gt;
            (&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$main_page&lt;/span&gt; == 'products_all' &amp;amp;&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;) ||&lt;span style=&quot;color: #000000;&quot;&gt;
            (&lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$main_page&lt;/span&gt; == 'advanced_search_result' &amp;amp;&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$enable_on_block&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)
        ) {
            &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$enabled&lt;/span&gt; = &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
        }
    }
}

&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!&lt;span style=&quot;color: #800080;&quot;&gt;$GLOBALS&lt;/span&gt;[&quot;MAGICZOOMPLUS_HEADERS_LOADED&quot;] &amp;amp;&amp;amp; &lt;span style=&quot;color: #800080;&quot;&gt;$enabled&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;) {
    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$mod&lt;/span&gt;-&amp;gt;headers(DIR_WS_CATALOG . DIR_WS_TEMPLATE . 'jscript', DIR_WS_CATALOG . DIR_WS_TEMPLATE . 'css'&lt;span style=&quot;color: #000000;&quot;&gt;);
    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #800080;&quot;&gt;$scroll&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;) {
        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #800080;&quot;&gt;$scroll&lt;/span&gt;-&amp;gt;headers(DIR_WS_CATALOG . DIR_WS_TEMPLATE . 'jscript', DIR_WS_CATALOG . DIR_WS_TEMPLATE . 'css'&lt;span style=&quot;color: #000000;&quot;&gt;);
    }
    &lt;/span&gt;&lt;span style=&quot;color: #800080;&quot;&gt;$GLOBALS&lt;/span&gt;[&quot;MAGICZOOMPLUS_HEADERS_LOADED&quot;] = &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;
}&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Sep 2016 00:00:00 +0800</pubDate>
        <link>http://blog.lehehe.me//php/2016/09/26/php-=&.html</link>
        <guid isPermaLink="true">http://blog.lehehe.me//php/2016/09/26/php-=&.html</guid>
        
        <category>php</category>
        
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>First Blog</title>
        <description>&lt;h1 id=&quot;my-first-blog&quot;&gt;My First Blog&lt;/h1&gt;
</description>
        <pubDate>Mon, 26 Sep 2016 00:00:00 +0800</pubDate>
        <link>http://blog.lehehe.me//life/2016/09/26/first-blog.html</link>
        <guid isPermaLink="true">http://blog.lehehe.me//life/2016/09/26/first-blog.html</guid>
        
        
        <category>Life</category>
        
      </item>
    
  </channel>
</rss>
